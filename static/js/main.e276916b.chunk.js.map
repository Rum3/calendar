{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["locales","require","localizer","dateFnsLocalizer","format","parse","startOfWeek","getDay","events","title","allDay","start","Date","end","App","useState","newEvent","setNewEvent","allEvents","setAllEvents","className","type","placeholder","style","width","marginRight","value","onChange","e","target","placeholderText","selected","stlye","marginTop","onClick","i","length","d1","d2","d3","d4","alert","startAccessor","endAccessor","height","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAWMA,EAAU,CACZ,QAASC,EAAQ,KAEfC,EAAYC,YAAiB,CAC/BC,iBACAC,gBACAC,sBACAC,iBACAP,YAGEQ,EAAS,CACX,CACIC,MAAO,cACPC,QAAQ,EACRC,MAAO,IAAIC,KAAK,KAAM,EAAG,GACzBC,IAAK,IAAID,KAAK,KAAM,EAAG,IAE3B,CACIH,MAAO,WACPE,MAAO,IAAIC,KAAK,KAAM,EAAG,GACzBC,IAAK,IAAID,KAAK,KAAM,EAAG,KAE3B,CACIH,MAAO,aACPE,MAAO,IAAIC,KAAK,KAAM,EAAG,IACzBC,IAAK,IAAID,KAAK,KAAM,EAAG,MAuDhBE,MAnDf,WACI,MAAgCC,mBAAS,CAAEN,MAAO,GAAIE,MAAO,GAAIE,IAAK,KAAK,mBAApEG,EAAQ,KAAEC,EAAW,KAC5B,EAAkCF,mBAASP,GAAO,mBAA3CU,EAAS,KAAEC,EAAY,KAgC9B,OACI,sBAAKC,UAAU,MAAK,UAChB,0CACA,+CACA,gCACI,uBAAOC,KAAK,OAAOC,YAAY,YAAYC,MAAO,CAAEC,MAAO,MAAOC,YAAa,QAAUC,MAAOV,EAASP,MAAOkB,SAAU,SAACC,GAAC,OAAKX,EAAY,2BAAKD,GAAQ,IAAEP,MAAOmB,EAAEC,OAAOH,QAAQ,IACpL,cAAC,IAAU,CAACI,gBAAgB,aAAaP,MAAO,CAAEE,YAAa,QAAUM,SAAUf,EAASL,MAAOgB,SAAU,SAAChB,GAAK,OAAKM,EAAY,2BAAKD,GAAQ,IAAEL,UAAQ,IAC3J,cAAC,IAAU,CAACmB,gBAAgB,WAAWC,SAAUf,EAASH,IAAKc,SAAU,SAACd,GAAG,OAAKI,EAAY,2BAAKD,GAAQ,IAAEH,QAAM,IACnH,wBAAQmB,MAAO,CAAEC,UAAW,QAAUC,QAtClD,WAEI,IAAK,IAAIC,EAAE,EAAGA,EAAEjB,EAAUkB,OAAQD,IAAI,CAElC,IAAME,EAAK,IAAIzB,KAAMM,EAAUiB,GAAGxB,OAC5B2B,EAAK,IAAI1B,KAAKI,EAASL,OACvB4B,EAAK,IAAI3B,KAAKM,EAAUiB,GAAGtB,KAC3B2B,EAAK,IAAI5B,KAAKI,EAASH,KAQ5B,GACIwB,GAAOC,GAAQA,GAAMC,GAAYF,GAAOG,GACxCA,GAAMD,EAEX,CACIE,MAAM,SACN,KACH,CAEL,CAGAtB,EAAa,GAAD,mBAAKD,GAAS,CAAEF,IAChC,EAU0E,0BAIlE,cAAC,IAAQ,CAACd,UAAWA,EAAWM,OAAQU,EAAWwB,cAAc,QAAQC,YAAY,MAAMpB,MAAO,CAAEqB,OAAQ,IAAKC,OAAQ,YAGrI,EC9EeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJAQ,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.e276916b.chunk.js","sourcesContent":["import format from \"date-fns/format\";\nimport getDay from \"date-fns/getDay\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport React, { useState } from \"react\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./App.css\";\n\nconst locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\"),\n};\nconst localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n});\n\nconst events = [\n    {\n        title: \"Big Meeting\",\n        allDay: true,\n        start: new Date(2021, 6, 0),\n        end: new Date(2021, 6, 0),\n    },\n    {\n        title: \"Vacation\",\n        start: new Date(2021, 6, 7),\n        end: new Date(2021, 6, 10),\n    },\n    {\n        title: \"Conference\",\n        start: new Date(2021, 6, 20),\n        end: new Date(2021, 6, 23),\n    },\n];\n\nfunction App() {\n    const [newEvent, setNewEvent] = useState({ title: \"\", start: \"\", end: \"\" });\n    const [allEvents, setAllEvents] = useState(events);\n\n    function handleAddEvent() {\n        \n        for (let i=0; i<allEvents.length; i++){\n\n            const d1 = new Date (allEvents[i].start);\n            const d2 = new Date(newEvent.start);\n            const d3 = new Date(allEvents[i].end);\n            const d4 = new Date(newEvent.end);\n      /*\n          console.log(d1 <= d2);\n          console.log(d2 <= d3);\n          console.log(d1 <= d4);\n          console.log(d4 <= d3);\n            */\n\n             if (\n              ( (d1  <= d2) && (d2 <= d3) ) || ( (d1  <= d4) &&\n                (d4 <= d3) )\n              )\n            {   \n                alert(\"CLASH\"); \n                break;\n             }\n    \n        }\n        \n        \n        setAllEvents([...allEvents, newEvent]);\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>Calendar</h1>\n            <h2>Add New Event</h2>\n            <div>\n                <input type=\"text\" placeholder=\"Add Title\" style={{ width: \"20%\", marginRight: \"10px\" }} value={newEvent.title} onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })} />\n                <DatePicker placeholderText=\"Start Date\" style={{ marginRight: \"10px\" }} selected={newEvent.start} onChange={(start) => setNewEvent({ ...newEvent, start })} />\n                <DatePicker placeholderText=\"End Date\" selected={newEvent.end} onChange={(end) => setNewEvent({ ...newEvent, end })} />\n                <button stlye={{ marginTop: \"10px\" }} onClick={handleAddEvent}>\n                    Add Event\n                </button>\n            </div>\n            <Calendar localizer={localizer} events={allEvents} startAccessor=\"start\" endAccessor=\"end\" style={{ height: 500, margin: \"50px\" }} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}